version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: vtc-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: vtcadmin
      MONGO_INITDB_ROOT_PASSWORD: vtcpassword123
      MONGO_INITDB_DATABASE: vtc-connect-pro
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - vtc-network

  # Redis for caching and sessions
  redis:
    image: redis:7.2-alpine
    container_name: vtc-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass vtcredispass
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - vtc-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vtc-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://vtcadmin:vtcpassword123@mongodb:27017/vtc-connect-pro?authSource=admin
      REDIS_URL: redis://:vtcredispass@redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRE: 30d
      BCRYPT_SALT_ROUNDS: 12
      FRONTEND_URL: http://localhost:3000
      EMAIL_FROM: noreply@vtc-connect-pro.com
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USER: your-email@gmail.com
      SMTP_PASS: your-app-password
      STRIPE_SECRET_KEY: sk_test_your_stripe_secret_key
      STRIPE_WEBHOOK_SECRET: whsec_your_webhook_secret
      GOOGLE_MAPS_API_KEY: your-google-maps-api-key
      CLOUDINARY_CLOUD_NAME: your-cloudinary-cloud-name
      CLOUDINARY_API_KEY: your-cloudinary-api-key
      CLOUDINARY_API_SECRET: your-cloudinary-api-secret
      FCM_SERVER_KEY: your-firebase-cloud-messaging-server-key
      TWILIO_ACCOUNT_SID: your-twilio-account-sid
      TWILIO_AUTH_TOKEN: your-twilio-auth-token
      TWILIO_PHONE_NUMBER: +1234567890
    ports:
      - "5000:5000"
    volumes:
      - ./backend/logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - vtc-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vtc-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_SOCKET_URL: http://localhost:5000
      REACT_APP_STRIPE_PUBLISHABLE_KEY: pk_test_your_stripe_publishable_key
      REACT_APP_GOOGLE_MAPS_API_KEY: your-google-maps-api-key
      REACT_APP_ENVIRONMENT: production
      GENERATE_SOURCEMAP: false
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - vtc-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: vtc-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - vtc-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  vtc-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
